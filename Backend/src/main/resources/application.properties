spring.application.name=journeyGenie

# database configuration
#spring.datasource.url=jdbc:postgresql://localhost:5432/journeyGenie
#spring.datasource.username=postgres
#spring.datasource.password=postgres

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Cloudinary Configuration
cloudinary.cloud-name=dg1sx19ve
cloudinary.api-key=214429925976299
cloudinary.api-secret=KRgnNaisrd_3PPVxjDRHfSOWAhY

# File upload configuration - INCREASE THESE LIMITS
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# Optional: Enable multipart uploads
spring.servlet.multipart.enabled=true

# Optional: Set temporary file location
# spring.servlet.multipart.location=/tmp

# oauth2 configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=${BACKEND_URL}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email
